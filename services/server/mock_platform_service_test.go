// Code generated by mockery v1.0.0. DO NOT EDIT.

package server

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// mockPlatformService is an autogenerated mock type for the platformService type
type mockPlatformService struct {
	mock.Mock
}

// Connect provides a mock function with given fields: ctx, serverName, email, password
func (_m *mockPlatformService) Connect(ctx context.Context, serverName string, email string, password string) error {
	ret := _m.Called(ctx, serverName, email, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(ctx, serverName, email, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SignOut provides a mock function with given fields: ctx
func (_m *mockPlatformService) SignOut(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SignUp provides a mock function with given fields: ctx, email, firstName, lastName
func (_m *mockPlatformService) SignUp(ctx context.Context, email string, firstName string, lastName string) error {
	ret := _m.Called(ctx, email, firstName, lastName)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(ctx, email, firstName, lastName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
